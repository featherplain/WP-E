/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$-dummy-name: '_dummy';
$-dummy-x: 116px;
$-dummy-y: 8px;
$-dummy-offset-x: -116px;
$-dummy-offset-y: -8px;
$-dummy-width: 10px;
$-dummy-height: 10px;
$-dummy-total-width: 400px;
$-dummy-total-height: 82px;
$-dummy-image: '/assets/images/sprite.png';
$-dummy: 116px 8px -116px -8px 10px 10px 400px 82px '/assets/images/sprite.png' '_dummy';
$icon-fb-name: 'icon_fb';
$icon-fb-x: 0px;
$icon-fb-y: 46px;
$icon-fb-offset-x: 0px;
$icon-fb-offset-y: -46px;
$icon-fb-width: 18px;
$icon-fb-height: 36px;
$icon-fb-total-width: 400px;
$icon-fb-total-height: 82px;
$icon-fb-image: '/assets/images/sprite.png';
$icon-fb: 0px 46px 0px -46px 18px 36px 400px 82px '/assets/images/sprite.png' 'icon_fb';
$icon-hatena-name: 'icon_hatena';
$icon-hatena-x: 78px;
$icon-hatena-y: 8px;
$icon-hatena-offset-x: -78px;
$icon-hatena-offset-y: -8px;
$icon-hatena-width: 38px;
$icon-hatena-height: 34px;
$icon-hatena-total-width: 400px;
$icon-hatena-total-height: 82px;
$icon-hatena-image: '/assets/images/sprite.png';
$icon-hatena: 78px 8px -78px -8px 38px 34px 400px 82px '/assets/images/sprite.png' 'icon_hatena';
$icon-pocket-name: 'icon_pocket';
$icon-pocket-x: 0px;
$icon-pocket-y: 8px;
$icon-pocket-offset-x: 0px;
$icon-pocket-offset-y: -8px;
$icon-pocket-width: 38px;
$icon-pocket-height: 38px;
$icon-pocket-total-width: 400px;
$icon-pocket-total-height: 82px;
$icon-pocket-image: '/assets/images/sprite.png';
$icon-pocket: 0px 8px 0px -8px 38px 38px 400px 82px '/assets/images/sprite.png' 'icon_pocket';
$icon-tw-name: 'icon_tw';
$icon-tw-x: 38px;
$icon-tw-y: 8px;
$icon-tw-offset-x: -38px;
$icon-tw-offset-y: -8px;
$icon-tw-width: 40px;
$icon-tw-height: 34px;
$icon-tw-total-width: 400px;
$icon-tw-total-height: 82px;
$icon-tw-image: '/assets/images/sprite.png';
$icon-tw: 38px 8px -38px -8px 40px 34px 400px 82px '/assets/images/sprite.png' 'icon_tw';
$ttl-bkg-h2-name: 'ttl_bkgH2';
$ttl-bkg-h2-x: 0px;
$ttl-bkg-h2-y: 0px;
$ttl-bkg-h2-offset-x: 0px;
$ttl-bkg-h2-offset-y: 0px;
$ttl-bkg-h2-width: 400px;
$ttl-bkg-h2-height: 8px;
$ttl-bkg-h2-total-width: 400px;
$ttl-bkg-h2-total-height: 82px;
$ttl-bkg-h2-image: '/assets/images/sprite.png';
$ttl-bkg-h2: 0px 0px 0px 0px 400px 8px 400px 82px '/assets/images/sprite.png' 'ttl_bkgH2';
$spritesheet-width: 400px;
$spritesheet-height: 82px;
$spritesheet-image: '/assets/images/sprite.png';
$spritesheet-sprites: $-dummy $icon-fb $icon-hatena $icon-pocket $icon-tw $ttl-bkg-h2;
$spritesheet: 400px 82px '/assets/images/sprite.png' $spritesheet-sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
